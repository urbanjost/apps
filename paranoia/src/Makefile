#@(#) Makefile started by makeout(1) 2022-02-13 11:22:41
# generated by:   ...

NULL = 

PROGFILES = ../app/paranoid.f90

CPROGFILES = 

PROG = ${PROGFILES:.f90=}

CPROG = ${CPROGFILES:.c=}

TESTFILES = $(wildcard ../test/*.f90) $(wildcard ../test/*.F90) $(wildcard ../test/*/*.f) $(wildcard ../test/*/*.F)

TPROG = ${TESTFILES:.f90=}

SRCS =  sparanoia.f90 dparanoia.f90 

OBJS =  sparanoia.o dparanoia.o 
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # 
# platform-specific values you will probably change
# 
LIBS := 
CC := cc
CFLAGS := -O
F90 := gfortran
F90FLAGS := -O
LDFLAGS := 
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # 
gfortran: F90=gfortran
gfortran: F90FLAGS := -g -O -Wall -std=f2018 -Wextra -Wno-maybe-uninitialized -Wno-uninitialized
gfortran: F90FLAGS := 
gfortran: all
	@echo built with $(F90)

nvfortran: F90=nvfortran
nvfortran: F90FLAGS := -Minform=inform -Mbackslash -traceback
nvfortran: all
	@echo built with $(F90)

ifort: F90=ifort
ifort: F90FLAGS := -warn all -traceback
ifort: all
	@echo built with $(F90)

nagfor: F90=nagfor
nagfor: F90FLAGS := -C all
nagfor: all
	@echo built with $(F90)
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # 
all: $(PROG) $(CPROG) $(TPROG)
	#@test -f test_suite_log.txt || $(MAKE) test
	@echo "That is all folks!"

$(PROG): $(OBJS)

	-$(F90) $(LDFLAGS) $@.f90 -o $@ $(OBJS) $(LIBS)

$(TPROG): $(LIBRARIES)

	-$(F90) $(LDFLAGS) $@.f90 -o $@ $(OBJS) $(LIBS)

clean:
	rm -f $(PROG) $(CPROG) $(TPROG) $(OBJS) *.mod paranoid.o

.SUFFIXES: $(SUFFIXES) .f90 .F90 .ff .FF .shf
# .shf -- assumed to write Fortran code to stdout when executed
# .FF -- run thru prep(1) with    $system directives allowed
# .ff -- run thru prep(1) without $system directives allowed

.f90.o:
	$(F90) $(F90FLAGS) -c $<

.F90.o:
	$(F90) $(F90FLAGS) -c $<

.f95.o:
	$(F90) $(F90FLAGS) -c $<

.F95.o:
	$(F90) $(F90FLAGS) -c $<

.f03.o:
	$(F90) $(F90FLAGS) -c $<

.F03.o:
	$(F90) $(F90FLAGS) -c $<
#=================================================================================
# Fortran free format file known to have prep(1) preprocessor directives
# run thru prep(1) preprocessor with system commands allowed, variable F90 defined
# Assumes .F90 file does not exist previously, as it will overwrite it.
.FF.F90:
	@# run thru prep(1) preprocessor with system commands allowed
	prep -D F90 `uname -o` -verbose -system .true. -i $(<) -o $(*F).F90
	@[ -s $(*F).F90 ] || echo "error: $(*F).F90 is empty"
#=================================================================================
# Fortran free format file known to have prep(1) preprocessor directives
# run thru prep(1) preprocessor with no system commands allowed, variable F90
# defined. Assumes .F90 file does not exist previously, as it will overwrite it.
.ff.f90:
	@# run thru prep(1) preprocessor with system commands allowed
	prep -D F90 `uname -o` -verbose -i $(<) -o $(*F).F90
	@[ -s $(*F).F90 ] || echo "error: $(*F).F90 is empty"
#=================================================================================

